$schema: 'http://json-schema.org/draft-07/schema#'
$id: WEIS_model_options_schema_v00
title: WEIS wind turbine modeling options schema
description: Schema that describes the modeling options for WEIS
type: object
properties:
    General:
        type: object
        default: {}
        properties:
            verbosity:
                type: boolean
                default: False
                description: Prints additional outputs to screen (and to a file log in the future)
            solver_maxiter:
                type: integer
                default: 5
                description: Number of iterations for the top-level coupling solver
            openfast_configuration:
                type: object
                default: {}
                properties:
                    OF_run_fst:
                        type: string
                        default: none
                        description: Filename prefix for output files
                    OF_run_dir:
                        type: string
                        default: none
                        description: Path to place FAST output files (e.g. /home/user/myturbines/output)
                    generate_af_coords:
                        type: boolean
                        default: False
                        description: Flag to write airfoil coordinates out or not
                    use_exe:
                        type: boolean
                        default: False
                        description: Use openfast executable instead of library
                    model_only:
                        type: boolean
                        default: False
                        description: Flag to only generate an OpenFAST model and stop
                    save_timeseries:
                        type: boolean
                        default: True
                        description: Save openfast output timeseries
                    keep_time:
                        type: boolean
                        default: True
                        description: Keep timeseries in openmdao_openfast for post-processing
                    save_iterations:
                        type: boolean
                        default: True
                        description: Save summary stats and other info for each openfast iteration.  Could bump this up to a more global post-processing input.
                    FAST_exe:
                        type: string
                        default: none
                        description: Path to FAST executable to override default WEIS value (e.g. /home/user/OpenFAST/bin/openfast).  Note that if you use this, ROSCO must use the same compilation configuration.  You can specify the ROSCO dll with path2dll.
                    FAST_lib:
                        type: string
                        default: none
                        description: Path to FAST dynamic library to override default WEIS value (e.g. /home/user/OpenFAST/lib/libopenfast.so)
                    turbsim_exe:
                        type: string
                        default: none
                        description: Path to turbsim executable to override default WEIS value (e.g. /home/user/OpenFAST/bin/turbsim)
                    path2dll:
                        type: string
                        default: none
                        description: Path to controller shared library (e.g. /home/user/myturbines/libdiscon.so)
                    allow_fails:
                        type: boolean
                        default: False
                        description: Allow WEIS to continue if OpenFAST fails?  All outputs will be filled with fail_value. Use with caution!
                    fail_value:
                        type: number
                        default: -9999
                        decription: All OpenFAST outputs will be filled with this if the simulation fails. 
                    write_stdout:
                        type: boolean
                        default: False
                        description: Write standard output to own file.  Output will not print to screen.
                    nFD:
                        type: integer
                        default: 1
                        description: Number of parallel finite differencing performed by OpenMDAO. WEIS sets this number once the preMPI keyword argument is set
                    nOFp:
                        type: integer
                        default: 1
                        description: Number of parallel OpenFAST runs performed by OpenMDAO. WEIS sets this number once the preMPI keyword argument is set
            goodman_correction:
                type: boolean
                default: False
                description: Flag whether to apply the Goodman correction for mean stress value to the stress amplitude value in fatigue calculations
    WISDEM:
        type: object
        default: {}
        description: Options for running WISDEM.  No further options are included in this file.  They are populated using the modeling schema in the WISDEM project in python.
    RAFT: &raft_modopt
        type: object
        default: {}
        description: Options for WEIS fidelity level 1 = frequency domain (RAFT)
        properties:
            flag:
                type: boolean
                default: False
                description: Whether or not to run WEIS fidelity level 1 = frequency domain (RAFT)
            min_freq:
                type: number
                description: Minimum frequency to evaluate (frequencies will be min_freq:min_freq:max_freq)
                default: 0.0159
                minimum: 0.0
                maximum: 1e3
                units: Hz
            max_freq:
                type: number
                description: Maximum frequency to evaluate (frequencies will be min_freq:min_freq:max_freq)
                default: 0.3183
                minimum: 0.0
                maximum: 1e3
                units: Hz
            potential_bem_members:
                type: array
                description: List of submerged member names to model with potential flow boundary element methods.  Members not listed here will be modeled with strip theory
                default: []
                items:
                    type: string
                    uniqueItems: True
            potential_model_override:
                type: integer
                default: 0
                enum: [0, 1, 2]
                description: User override for potential boundary element modeling. 0 = uses the potential_bem_members list for inviscid force and computes viscous drag with strip theory (members not listed use only strip theory), 1 = no potential BEM modeling for any member (just strip theory), 2 = potential BEM modeling for all members (no strip theory)
            xi_start:
                type: number
                default: 0.0
                minimum: 0.0
                maximum: 1000.0
                description: Initial amplitude of each DOF for all frequencies
            nIter:
                type: integer
                default: 15
                minimum: 1
                maximum: 100
                description: Number of iterations to solve dynamics
            dls_max:
                type: integer
                default: 5
                minimum: 1
                maximum: 100
                description: Maximum node splitting section amount
            min_freq_BEM:
                type: number
                default: 0.0159
                minimum: 0.0
                maximum: 2.0
                description: lowest frequency and frequency interval to use in BEM analysis
                units: Hz
            trim_ballast:
                type: integer
                default: 0
                description: Use RAFT to trim ballast so that average heave is near 0 (0 - no trim, 1 - adjust compartment fill values, 2 - adjust ballast density, recommended for now)
            heave_tol:
                type: number
                default: 1
                minimum: 0
                description: Heave tolerance for trim_ballast
                units: m
            save_designs:
                type: boolean
                default: False
                description: Save RAFT design iterations in <outputs>/raft_designs
            plot_designs:
                type: boolean
                default: False
                description: Plot RAFT design iterations in <outputs>/raft_designs
            runPyHAMS:
                type: boolean
                default: True
                description: Flag to run pyHAMS
    OpenFAST: &of_modopt
        type: object
        default: {}
        description: Options for running OpenFAST.  No further options are included in this file.  They are populated using the openfast schema.
    OpenFAST_Linear: &of_linear_modopt
        type: object
        default: {}
        description: Options for WEIS fidelity level 2 = linearized time domain (OpenFAST)
        properties:
            flag:
                type: boolean
                default: False
                description: Whether or not to run WEIS fidelity level 2 = linearized OpenFAST
            simulation: # this may be shared with OpenFAST IEC load cases in the future
                type: object
                default: {}
                properties:
                    flag:
                        type: boolean
                        default: False
                        description: Whether or not to run a level 2 time domain simulation
                    TMax: &TMax
                        type: number
                        default: 720.0
                        minimum: 0.0
                        maximum: 100000.0
                        unit: s
                        description: Total run time (s)
            linearization:      # Some of these options were in Level 3, but we wouldn't set them if running a Level 2 simulation
                type: object
                default: {}
                properties:
                    TMax: *TMax         # note that linearization could run for a different TMax than simulation
                    DT:
                        type: number
                        default: 0.025
                        minimum: 0.0
                        maximum: 10.0
                        unit: s
                        description: Integration time step (s)
                    wind_speeds:
                        type: array
                        description: List of wind speeds at which to linearize (m/s)
                        default: [14.0, 16.0, 18.0]
                        items:
                            type: number
                            uniqueItems: True
                            minimum: 0.0
                            maximum: 200.0
                    rated_offset:
                        type: number
                        default: 1
                        minimum: 0.0
                        maximum: 10.0
                        unit: m/s
                        description: Amount to increase rated wind speed from cc-blade to openfast with DOFs enabled.  In general, the more DOFs, the greater this value.
                    DOFs:
                        type: array
                        description: List of degrees-of-freedom to linearize about
                        default: ['GenDOF','TwFADOF1']
                        items:
                            type: string
                            enum: ['FlapDOF1','FlapDOF2','EdgeDOF','TeetDOF','DrTrDOF','GenDOF','YawDOF','TwFADOF1','TwFADOF2','TwSSDOF1','TwSSDOF2','PtfmSgDOF','PtfmSwDOF','PtfmHvDOF','PtfmRDOF','PtfmPDOF','PtfmYDOF']
                    # DZ: I would assume Linearize = True if we were running Level 2 WEIS
                    # Linearize:
                    #     type: boolean
                    #     default: False
                    #     description: Linearization analysis (flag)
                    # DZ: For now, only CalcSteady = True is supported
                    # CalcSteady:
                    #     type: boolean
                    #     default: False
                    #     description: Calculate a steady-state periodic operating point before linearization? [unused if Linearize=False] (flag)
                    # DZ: For now, we determine TrimCase this automatically based on whether wind_speeds > v_rated
                    # TrimCase:
                    #     type: string
                    #     enum: ['1','2','3', yaw, Yaw, YAW, torque, Torque, TORQUE, pitch, Pitch, PITCH]
                    #     default: '3'
                    #     description: Controller parameter to be trimmed {1:yaw; 2:torque; 3:pitch} [used only if CalcSteady=True] (-)
                    TrimTol:
                        type: number
                        default: 1.e-5
                        minimum: 0.0
                        maximum: 1.0
                        unit: none
                        description: Tolerance for the rotational speed convergence [used only if CalcSteady=True] (-)
                    TrimGain:
                        type: number
                        default: 1.e-4
                        minimum: 0.0
                        maximum: 1.0
                        unit: rad/(rad/s)
                        description: Proportional gain for the rotational speed error (>0) [used only if CalcSteady=True] (rad/(rad/s) for yaw or pitch; Nm/(rad/s) for torque)
                    Twr_Kdmp:
                        type: number
                        default: 0.0
                        minimum: 0.0
                        maximum: 1e5
                        unit: kg/s
                        description: Damping factor for the tower [used only if CalcSteady=True] (N/(m/s))
                    Bld_Kdmp:
                        type: number
                        default: 0.0
                        minimum: 0.0
                        maximum: 1e5
                        unit: kg/s
                        description: Damping factor for the blades [used only if CalcSteady=True] (N/(m/s))
                    NLinTimes:
                        type: integer
                        default: 12
                        minimum: 0
                        maximum: 120
                        description: Number of times to linearize (-) [>=1] [unused if Linearize=False]
                    LinTimes:
                        type: array
                        description: List of times at which to linearize (s) [1 to NLinTimes] [used only when Linearize=True and CalcSteady=False]
                        default: [30.0, 60.0]
                        items:
                            type: number
                            uniqueItems: True
                            minimum: 0.0
                            maximum: 1e4
                    # DZ: I don't know if we should support these initially:
                    # LinInputs:
                    #     type: string
                    #     enum: ['0','1','2', none, None, NONE, standard, Standard, STANDARD, all, All, ALL]
                    #     default: '1'
                    #     description: Inputs included in linearization (switch) {0=none; 1=standard; 2=all module inputs (debug)} [unused if Linearize=False]
                    # LinOutputs:
                    #     type: string
                    #     enum: ['0','1','2', none, None, NONE, standard, Standard, STANDARD, all, All, ALL]
                    #     default: '1'
                    #     description: Outputs included in linearization (switch) {0=none; 1=from OutList(s); 2=all module outputs (debug)} [unused if Linearize=False]
                    # LinOutJac:
                    #     type: boolean
                    #     default: False
                    #     description: Include full Jacobians in linearization output (for debug) (flag) [unused if Linearize=False; used only if LinInputs=LinOutputs=2]
                    # LinOutMod:
                    #     type: boolean
                    #     default: False
                    #     description: Write module-level linearization output files in addition to output for full system? (flag) [unused if Linearize=False]
            DTQP: # this may be shared with OpenFAST IEC load cases in the future
                type: object
                default: {}
                properties:
                    flag:
                        type: boolean
                        default: False
                        description: Whether or not to run a DTQP optimization at level 2
                    nt:
                        type: number
                        default: 1000
                        description: Number of timesteps in DTQP timeseries optimization
                    maxiters:
                        type: number
                        default: 150000
                        description: Maximum number of DTQP optimization iterations
                    tolerance:
                        type: number
                        default: 1.E-4
                        description: Tolerance of DTQP optimization
                    function:
                        type: string
                        enum: ['osqp','ipopt']
                        default: 'osqp'
                        description: Solver used for DTQP optimization

            #InflowWind: *ofinflowwind
            #AeroDyn: *ofaerodyn
            #ElastoDyn: *ofelastodyn
            #ElastoDynBlade: *ofelastodynblade
            #ElastoDynTower: *ofelastodyntower
            #BeamDyn: *ofbeamdyn
            #HydroDyn: *ofhydrodyn
            #SubDyn: *ofsubdyn
            #MoorDyn: *ofmoordyn
            #ServoDyn: *ofservodyn
            #outlist: *ofoutlist
    # Add pointers to new Level 1,2,3 for backwards compatibility
    Level1: *raft_modopt
    Level2: *of_linear_modopt
    Level3: *of_modopt
    DLC_driver:
        type: object
        default: {}
        properties:
            DLCs:
                type: array
                default: [{}]
                items:
                    type: object
                    properties:
                        DLC:
                            type: string
                            default: '1.1'
                            enum: ['1.1', '1.2', '1.3', '1.4', '1.5', '1.6', '2.1', '2.3', '3.1', '3.2', '3.3', '5.1', '6.1', '6.2', '6.3', '6.4', '6.5', '7.1', '7.2', '12.1', 'Custom','AEP']
                            description: IEC design load case to run. The DLCs currently supported are 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 5.1, 6.1, 6.3, and 6.4
                        wind_speed:
                            type: array
                            description: Wind speeds for this DLC. If these are defined, ws_bin_size is neglected.
                            default: []
                            items:
                                type: number
                                unit: m/s
                                minItems: 1
                                minimum: 0.0
                                maximum: 200.0
                                uniqueItems: true
                        ws_bin_size:
                            type: number
                            default: 2
                            minimum: 0.01
                            maximum: 20.0
                            unit: m/s
                            description: Size of the wind speed bin between cut in and cout out wind speeds. It usually can be set to 2 m/s. This entry is neglected if the wind speeds are specified by the user.
                        n_seeds:
                            type: integer
                            default: 1
                            minimum: 1
                            maximum: 100
                            description: Number of turbulent wind seeds drawn from the numpy random integer generator. This entry is neglected if the entry wind_seed is defined.  If DLC 1.4, number of waves seeds.
                        n_azimuth:
                            type: integer
                            default: 1
                            minimum: 1
                            maximum: 100
                            description: Number of azimuth initial conditions to use (primarily during DLC 5.1)
                        wind_seed:
                            type: array
                            default: []
                            description: Array of turbulent wind seeds for TurbSim. If these are defined, n_seeds is neglected.
                            items:
                                type: integer
                                unit: none
                                minItems: 1
                                uniqueItems: true
                        wave_seed:
                            type: array
                            default: []
                            description: Wave random number generator seeds for HydroDyn
                            items:
                                type: integer
                                unit: none
                                minItems: 1
                                uniqueItems: true
                        wind_heading:
                            type: array
                            description: Wind direction from north. This array must currently have either length=1, i.e. one constant value, or the same length of the array wind_speed.
                            default: [0.]
                            items:
                                type: number
                                unit: deg
                                minItems: 1
                                minimum: -180.0
                                maximum: 180.0
                        yaw_misalign:
                            type: array
                            description: Alignment of the nacelle with respect to north. This array must currently have either length=1, i.e. one constant value, or the same length of the array wind_speed. Default depends on DLC, specified in dlc_generator.
                            items:
                                type: number
                                unit: deg
                                minItems: 1
                                minimum: -180.0
                                maximum: 180.0
                        wave_spectrum:
                            type: array
                            description: Spectrum of the waves. This array must currently have either length=1, i.e. one constant spectrum, or the same length of the array wind_speed
                            #default: ["JONSWAP"]
                            items:
                                type: str
                                enum: ["JONSWAP","unit"]
                                minItems: 1
                        turbine_status:
                            type: string
                            description: Status of the turbine, it can be either operating, parked-idling, or parked-still. Each DLC come with its default turbine status specified by the standards.
                            default: operating
                            enum: ['operating','parked-idling','parked-still']
                        wave_period:
                            type: array
                            description: Period between waves. If this array is populated by the user, then the field metocean_conditions is neglected. If wave_period is not defined, metocean_conditions will be used, either in the values provided by the user or with its default values (the first option is highly recommended).
                            default: []
                            items:
                                type: number
                                unit: s
                                minItems: 1
                                minimum: 0.0
                                maximum: 1000.0
                        wave_height:
                            type: array
                            description: Height of the waves. If this array is populated by the user, then the field metocean_conditions is neglected. If wave_height is not defined, metocean_conditions will be used, either in the values provided by the user or with its default values (the first option is highly recommended).
                            default: []
                            items:
                                type: number
                                unit: m
                                minItems: 1
                                minimum: 0.0
                                maximum: 100.0
                        wave_heading:
                            type: array
                            description: Heading of the waves with respect to north. This array must currently have either length=1, i.e. one constant value, or the same length of the array wind_speed
                            default: [0.]
                            items:
                                type: number
                                unit: deg
                                minItems: 1
                                minimum: -180.0
                                maximum: 180.0
                        wave_gamma:
                            type: array
                            description: Peak-shape parameter of incident wave spectrum. If 0, the default from IEC61400-3 / HydroDyn is used. This array must currently have either length=1, i.e. one constant value, or the same length of the array wind_speed
                            default: [0.]
                            items:
                                type: number
                                minItems: 1
                                minimum: 0.0
                                maximum: 10.0
                        probabilities:
                            type: array
                            description: Probability of occurrance for each case. This entry is relevant only for DLC 1.2 and 6.4. This array must currently have either length=1, i.e. one constant value, or the same length of the array wind_speed.
                            default: [1.]
                            items:
                                type: number
                                minItems: 1
                                minimum: 0.
                                maximum: 1.
                        IEC_WindType:
                            type: string
                            default: NTM
                            enum: ['NTM', '1ETM', '2ETM', '3ETM', '1EWM1', '2EWM1', '3EWM1', '1EWM50', '2EWM50', '3EWM50', 'ECD', 'EDC', 'EOG','EWS']
                            description: IEC turbulence type ('NTM'=normal, 'xETM'=extreme turbulence, 'xEWM1'=extreme 1-year wind, 'xEWM50'=extreme 50-year wind, where x=wind turbine class 1, 2, or 3), 'ECD'=extreme coherent gust with direction change, 'EDC'=extreme direction change, 'EOG'=extreme operating gust. Normally the user does not need to define this entry, 'EWS'='extreme wind shear'
                        analysis_time:
                            type: number
                            unit: s
                            minimum: 0.0
                            maximum: 1.e+4
                            default: 0.
                            description: This is the length of the simulation where outputs will be recorded. Its default is 600 seconds (10 minutes) for most simulations, except for the coherent cases where a shorter time window of 200 s is used.
                        transient_time:
                            type: number
                            unit: s
                            minimum: 0.0
                            maximum: 1.e+4
                            default: 120.
                            description: This is the length of the simulation where outputs will be discarded. Its default is 120 seconds (2 minutes) for all simulations. The total simulation time is the sum of analysis_time and transient_time
                        shutdown_time:
                            type: number
                            unit: s
                            minimum: 0.0
                            maximum: 1.e+5
                            default: 9999
                            description: Time when shutdown occurs in DLC 5.1
                        wind_file:
                            type: string
                            description: File path of custom wind file
                        TI_factor: 
                            type: number
                            unit: Percentage
                            description: The fraction of the TI, relative to the class defined in the geometry options or by turbulence_class
                        turbulence_class: 
                            type: string
                            enum: ['A+','A','B','C']
                            description: The class of turbulence, will overwrite class defined in geometry options. Only valid in the AEP DLC.
                        user_group:
                            type: [object,array]
                            items:
                                type: object
                                description: Groups
                            default: {}
                            description: Define additional groups to alter DLCs or sweep additional paramters.  Users can input single values to change all of the simulations in a DLC, multiple values to add an additional group to sweep over, or a list of new groups in the yaml format.
                        turbulent_wind:
                            type: object
                            default: {}
                            description: These are all inputs to TurbSim. These inputs usually do not need to be set unless you are trying to customize a DLC
                            properties:
                                flag:
                                    type: boolean
                                    default: False
                                    description: Flag switching between steady wind and turbulent wind grid from TurbSim.
                                Echo:
                                    type: boolean
                                    default: False
                                    description: Echo input data to <RootName>.ech (flag)
                                RandSeed1:
                                    type: integer
                                    default: 1
                                    description: First random seed  (-2147483648 to 2147483647)
                                RandSeed2:
                                    default: RANLUX
                                    description: Second random seed  (-2147483648 to 2147483647)
                                WrBHHTP:
                                    type: boolean
                                    default: False
                                    description: Output hub-height turbulence parameters in binary form?  (Generates RootName.bin)
                                WrFHHTP:
                                    type: boolean
                                    default: False
                                    description: Output hub-height turbulence parameters in formatted form?  (Generates RootName.dat)
                                WrADHH:
                                    type: boolean
                                    default: False
                                    description: Output hub-height time-series data in AeroDyn form?  (Generates RootName.hh)
                                WrADFF:
                                    type: boolean
                                    default: True
                                    description: Output full-field time-series data in TurbSim/AeroDyn form? (Generates RootName.bts)
                                WrBLFF:
                                    type: boolean
                                    default: False
                                    description: Output full-field time-series data in BLADED/AeroDyn form?  (Generates RootName.wnd)
                                WrADTWR:
                                    type: boolean
                                    default: False
                                    description: Output tower time-series data? (Generates RootName.twr)
                                WrFMTFF:
                                    type: boolean
                                    default: False
                                    description: Output full-field time-series data in formatted (readable) form?  (Generates RootName.u, RootName.v, RootName.w)
                                WrACT:
                                    type: boolean
                                    default: False
                                    description: Output coherent turbulence time steps in AeroDyn form? (Generates RootName.cts)
                                Clockwise:
                                    type: boolean
                                    default: False
                                    description: Clockwise rotation looking downwind? (used only for full-field binary files - not necessary for AeroDyn)
                                ScaleIEC:
                                    type: integer
                                    enum: [0, 1, 2]
                                    default: 0
                                    description: Scale IEC turbulence models to exact target standard deviation? [0=no additional scaling; 1=use hub scale uniformly; 2=use individual scales]
                                NumGrid_Z:
                                    type: integer
                                    default: 25
                                    minimum: 5
                                    maximum: 100
                                    description: Vertical grid-point matrix dimension
                                NumGrid_Y:
                                    type: integer
                                    default: 25
                                    minimum: 5
                                    maximum: 100
                                    description: Horizontal grid-point matrix dimension
                                TimeStep:
                                    type: number
                                    default: 0.05
                                    minimum: 1.e-4
                                    maximum: 1.
                                    unit: s
                                    description: Time step [seconds]
                                UsableTime:
                                    type: string
                                    default: 'ALL'
                                    description: Usable length of output time series [seconds] (program will add GridWidth/MeanHHWS seconds unless UsableTime is 'ALL')
                                HubHt:
                                    type: number
                                    default: 0
                                    minimum: 0
                                    maximum: 5.e+2
                                    unit: m
                                    description: Hub height [m] (should be > 0.5*GridHeight)
                                GridHeight:
                                    type: number
                                    default: 0
                                    minimum: 0
                                    maximum: 5.e+2
                                    unit: m
                                    description: Grid height [m]
                                GridWidth:
                                    type: number
                                    default: 0
                                    minimum: 0
                                    maximum: 5.e+2
                                    unit: m
                                    description: Grid width [m] (should be >= 2*(RotorRadius+ShaftLength))
                                VFlowAng:
                                    type: number
                                    default: 0.
                                    minimum: -9.e+1
                                    maximum: 9.e+1
                                    unit: deg
                                    description: Vertical mean flow (uptilt) angle [degrees]
                                HFlowAng:
                                    type: number
                                    default: 0.
                                    minimum: -9.e+1
                                    maximum: 9.e+1
                                    unit: deg
                                    description: Horizontal mean flow (skew) angle [degrees]
                                TurbModel:
                                    type: string
                                    enum: ['IECKAI','IECVKM','GP_LLJ','NWTCUP','SMOOTH','WF_UPW','WF_07D','WF_14D','TIDAL','API','USRINP','TIMESR','NONE']
                                    default: IECKAI
                                    description: Turbulence model
                                UserFile:
                                    type: string
                                    default: unused
                                    description: Name of the file that contains inputs for user-defined spectra or time series inputs (used only for "USRINP" and "TIMESR" models)
                                IECstandard:
                                    type: string
                                    default: 1-ED3
                                    enum: ['1-ED3', '1-ED2']
                                    description: Number of IEC 61400-x standard (x=1,2, or 3 with optional 61400-1 edition number (i.e. "1-Ed2") )
                                ETMc:
                                    type: string
                                    default: default
                                    description: IEC Extreme Turbulence Model
                                WindProfileType:
                                    type: string
                                    enum: ['LOG','PL','JET','H2L','API','USR','TS','IEC', 'LOG','default']
                                    default: PL
                                    description: Velocity profile type ('LOG';'PL'=power law;'JET';'H2L'=Log law for TIDAL model;'API';'USR';'TS';'IEC'=PL on rotor disk, LOG elsewhere; or 'default')
                                ProfileFile:
                                    type: string
                                    default: unused
                                    description: Name of the file that contains input profiles for WindProfileType='USR' and/or TurbModel='USRVKM' [-]
                                RefHt:
                                    type: number
                                    default: 0
                                    minimum: 0
                                    maximum: 1.e+5
                                    unit: m
                                    description: Height of the reference velocity (URef) [m]
                                URef:
                                    type: number
                                    unit: m/s
                                    default: -1
                                    description: URef is an input to TurbSim, but it's not honored in WEIS.  Please use the wind_speed input to each DLC instead.
                                IECturbc:
                                    type: number
                                    unit: '(-)'
                                    default: -1
                                    description: Turbulence intensity (fraction) for custom DLCs, if default (-1), the class letter will be used
                                ZJetMax:
                                    type: string
                                    default: default
                                    description: Jet height [m] (used only for JET velocity profile, valid 70-490 m)
                                PLExp:
                                    type: number
                                    default: -1
                                    description: Power law exponent [-] (or 'default'), if default (-1), the environment option shear_exp will be used for all DLCs
                                Z0:
                                    type: string
                                    default: default
                                    description: Surface roughness length [m] (or 'default')
                                Latitude:
                                    type: string
                                    default: default
                                    description: Site latitude [degrees] (or 'default')
                                RICH_NO:
                                    type: number
                                    default: 0.05
                                    description: Gradient Richardson number [-]
                                UStar:
                                    type: string
                                    default: default
                                    description: Friction or shear velocity [m/s] (or 'default')
                                ZI:
                                    type: string
                                    default: default
                                    description: Mixing layer depth [m] (or 'default')
                                PC_UW:
                                    type: string
                                    default: default
                                    description: Hub mean uw Reynolds stress [m^2/s^2] (or 'default' or 'none')
                                PC_UV:
                                    type: string
                                    default: default
                                    description: Hub mean uv Reynolds stress [m^2/s^2] (or 'default' or 'none')
                                PC_VW:
                                    type: string
                                    default: default
                                    description: Hub mean vw Reynolds stress [m^2/s^2] (or 'default' or 'none')
                                SCMod1:
                                    type: string
                                    default: default
                                    description: u-component coherence model ('GENERAL', 'IEC', 'API', 'NONE', or 'default')
                                SCMod2:
                                    type: string
                                    default: default
                                    description: v-component coherence model ('GENERAL', 'IEC', 'NONE', or 'default')
                                SCMod3:
                                    type: string
                                    default: default
                                    description: w-component coherence model ('GENERAL', 'IEC', 'NONE', or 'default')
                                InCDec1:
                                    type: string
                                    default: default
                                    description: u-component coherence parameters for general or IEC models [-, m^-1] (e.g. '10.0  0.3e-3' in quotes) (or 'default')
                                InCDec2:
                                    type: string
                                    default: default
                                    description: v-component coherence parameters for general or IEC models [-, m^-1] (e.g. '10.0  0.3e-3' in quotes) (or 'default')
                                InCDec3:
                                    type: string
                                    default: default
                                    description: w-component coherence parameters for general or IEC models [-, m^-1] (e.g. '10.0  0.3e-3' in quotes) (or 'default')
                                CohExp:
                                    type: string
                                    default: default
                                    description: Coherence exponent for general model [-] (or 'default')
                                CTEventPath:
                                    type: string
                                    default: unused
                                    description: Name of the path where event data files are located
                                CTEventFile:
                                    type: string
                                    enum: ['LES','DNS','RANDOM']
                                    default: RANDOM
                                    description: Type of event files
                                Randomize:
                                    type: boolean
                                    default: True
                                    description: Randomize the disturbance scale and locations? (true/false)
                                DistScl:
                                    type: number
                                    default: 1.
                                    minimum: 0
                                    maximum: 1.
                                    description: Disturbance scale [-] (ratio of event dataset height to rotor disk). (Ignored when Randomize = true.)
                                CTLy:
                                    type: number
                                    default: 0.5
                                    minimum: 0
                                    maximum: 1.
                                    description: Fractional location of tower centerline from right [-] (looking downwind) to left side of the dataset. (Ignored when Randomize = true.)
                                CTLz:
                                    type: number
                                    default: 0.5
                                    minimum: 0
                                    maximum: 1.
                                    description: Fractional location of hub height from the bottom of the dataset. [-] (Ignored when Randomize = true.)
                                CTStartTime:
                                    type: number
                                    default: 30
                                    minimum: 0
                                    maximum: 1.e+3
                                    unit: s
                                    description: Minimum start time for coherent structures in RootName.cts
            fix_wind_seeds:
                type: boolean
                default: True
                description: Fix the seed of the random integer generator controlling the seed of TurbSim. When set to False, the seeds change everytime the DLC generator class is called. It is recommended to keep it to True when the optimization is on, or different wind seeds will be generated for every function call, complicating the smoothness of the solution space. Even when set to True, the wind seeds are different across wind speeds and DLCs.
            fix_wave_seeds:
                type: boolean
                default: True
                description: Fix the seed of the random integer generator controlling the wave seed of HydroDyn. When set to False, the seeds change everytime the DLC generator class is called. It is recommended to keep it to True when the optimization is on, or different wave seeds will be generated for every function call, complicating the smoothness of the solution space. Even when set to True, the wave seeds are different across wind speeds and DLCs.
            metocean_conditions:
                type: object
                default: {}
                description: Here the metocean conditions can be specified in terms of wind speeds, significant wave height (Hs), and wave period (Tp) for normal sea state (NSS), fatigue calculations, and severe sea state (SSS). Currently WEIS neglects the joint probability density function crossing wind/wave directionality, wave peak shape parameter gamma
                properties:
                    wind_speed:
                        type: array
                        description: Array of wind speeds to tabulate Hs and Tp
                        default: [4., 6., 8., 10., 12., 14., 16., 18., 20., 22., 24.]
                        items:
                            type: number
                            unit: m/s
                            minItems: 1
                            minimum: 0.0
                            maximum: 50.0
                            uniqueItems: true
                    wave_height_NSS:
                        type: array
                        description: Array of Hs for NSS conditional to wind speed
                        default: [1.10, 1.18, 1.32, 1.54, 1.84, 2.19, 2.60, 3.06, 3.62, 4.03, 4.52]
                        items:
                            type: number
                            unit: m
                            minItems: 1
                            minimum: 0.0
                            maximum: 100.0
                            uniqueItems: false
                    wave_period_NSS:
                        type: array
                        description: Array of Tp for NSS conditional to wind speed
                        default: [8.52, 8.31, 8.01, 7.65, 7.44, 7.46, 7.64, 8.05, 8.52, 8.99, 9.45]
                        items:
                            type: number
                            unit: s
                            minItems: 1
                            minimum: 0.0
                            maximum: 1000.0
                            uniqueItems: false
                    wave_height_fatigue:
                        type: array
                        description: Array of Hs for fatigue computations conditional to wind speed
                        default: [1.10, 1.18, 1.32, 1.54, 1.84, 2.19, 2.60, 3.06, 3.62, 4.03, 4.52]
                        items:
                            type: number
                            unit: m
                            minItems: 1
                            minimum: 0.0
                            maximum: 100.0
                            uniqueItems: false
                    wave_period_fatigue:
                        type: array
                        description: Array of Tp for fatigue computations conditional to wind speed
                        default: [8.52, 8.31, 8.01, 7.65, 7.44, 7.46, 7.64, 8.05, 8.52, 8.99, 9.45]
                        items:
                            type: number
                            unit: s
                            minItems: 1
                            minimum: 0.0
                            maximum: 1000.0
                            uniqueItems: false
                    wave_height_SSS:
                        type: array
                        description: Array of Hs for SSS conditional to wind speed
                        default: [1.10, 1.18, 1.32, 1.54, 1.84, 2.19, 2.60, 3.06, 3.62, 4.03, 4.52]
                        items:
                            type: number
                            unit: m
                            minItems: 1
                            minimum: 0.0
                            maximum: 100.0
                            uniqueItems: false
                    wave_period_SSS:
                        type: array
                        description: Array of Tp for SSS conditional to wind speed
                        default: [8.52, 8.31, 8.01, 7.65, 7.44, 7.46, 7.64, 8.05, 8.52, 8.99, 9.45]
                        items:
                            type: number
                            unit: s
                            minItems: 1
                            minimum: 0.0
                            maximum: 1000.0
                            uniqueItems: false
                    wave_height50:
                            type: number
                            description: Wave height with 50-year occurrence, used in DLC 6.1
                            default: 15.
                            unit: m
                            minimum: 0.0
                            maximum: 100.0
                    wave_period50:
                            type: number
                            description: Wave period with 50-year occurrence, used in DLC 6.1
                            default: 15.
                            unit: s
                            minimum: 0.0
                            maximum: 1000.0
                    wave_height1:
                            type: number
                            description: Wave height with 1-year occurrence, used in DLC 6.3, 7.1, and 8.2
                            default: 15.
                            unit: m
                            minimum: 0.0
                            maximum: 100.0
                    wave_period1:
                            type: number
                            description: Wave period with 1-year occurrence, used in DLC 6.3, 7.1, and 8.2
                            default: 15.
                            unit: s
                            minimum: 0.0
                            maximum: 1000.0
            openfast_input_map:
                type: object
                default: {}
                description: Users can add to the openfast_input_map of the DLC driver here, with key value pairs
                
    ROSCO:
        type: object
        default: {}
        description: Options for WEIS fidelity level 3 = nonlinear time domain. Inherited from ROSCO/rosco/toolbox/inputs/toolbox_shema.yaml
        properties: 
            tuning_yaml:
                type: string
                description: yaml file to tune the ROSCO controller, only used for control-only optimizations using an OpenFAST model.  Absolute path or relative to modeling input.
                default: none

    OL2CL:
        type: object
        default: {}
        decription: Options for WEIS open loop to closed loop control optimization
        properties:
            flag:
                type: boolean
                default: False
                description: Whether or not to run open loop to closed loop optimization
            trajectory_dir:
                type: string
                default: unused
                description: Directory where open loop control trajectories are located
            save_error:
                type: boolean
                default: True
                description: Save error timeseries?
