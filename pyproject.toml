[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "weis"
version = "1.3"
description = 'Wind Energy with Integrated Servo-control'
readme = "README.md"
requires-python = ">=3.9"
license = {text = "Apache-2.0"}
keywords = ["wind", "turbine", "mdao", "design", "optimization"]
authors = [
  {name = "NREL WISDEM Team", email = "systems.engineering@nrel.gov" }
]
maintainers = [
  {name = "NREL WISDEM Team", email = "systems.engineering@nrel.gov" }
]
classifiers = [  # Optional
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 4 - Beta",

  # Indicate who your project is intended for
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering",

  "License :: OSI Approved :: Apache Software License",

  # Specify the Python versions you support here. In particular, ensure
  # that you indicate you support Python 3. These classifiers are *not*
  # checked by "pip install". See instead "python_requires" below.
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3 :: Only",
]

dependencies = [
  "marmot-agents>=0.2.5",
  "mat4py",
  "moorpy",
  "nlopt",
  "numpy",
  "openpyxl",
  "openraft",
  "osqp",
  "pcrunch",
  "pyhams",
  "rosco",
  "scipy",
  "smt",
  "wisdem",
]

# List additional groups of dependencies here (e.g. development
# dependencies). Users will be able to install these using the "extras"
# syntax, for example:
#
#   $ pip install sampleproject[dev]
#
# Similar to `dependencies` above, these must be valid existing
# projects.
[project.optional-dependencies] # Optional
test = ["coveralls", "pytest", "pytest-cov"]
opt = ["pyoptsparse"]
docs = ["sphinx",
	"sphinxcontrib-bibtex",
	"sphinx_rtd_theme>=1.3",
	"sphinxcontrib-applehelp",
  	"sphinxcontrib-devhelp",
	"sphinxcontrib-htmlhelp",
  	"sphinxcontrib-jsmath",
  	"sphinxcontrib-qthelp",
  	"sphinxcontrib-serializinghtml",
]
# List URLs that are relevant to your project
#
# This field corresponds to the "Project-URL" and "Home-Page" metadata fields:
# https://packaging.python.org/specifications/core-metadata/#project-url-multiple-use
# https://packaging.python.org/specifications/core-metadata/#home-page-optional
#
# Examples listed include a pattern for specifying where the package tracks
# issues, where the source is hosted, where to say thanks to the package
# maintainers, and where to support the project financially. The key is
# what's used to render the link text on PyPI.
[project.urls]  # Optional
"Homepage" = "https://github.com/WISDEM/WEIS"
"Documentation" = "https://weis.readthedocs.io"

#[project.scripts]
#wisdem = "weis.main:weis_cmd"

# This is configuration specific to the `setuptools` build backend.
# If you are using a different build backend, you will need to change this.
[tool.setuptools]
zip-safe = false
include-package-data = true

#[tool.setuptools.packages]
#find = {}

[tool.setuptools.packages.find]
exclude = ["docs", "tests", "ext"]
namespaces = true

[tool.setuptools.package-data]
# If there are data files included in your packages that need to be
# installed, specify them here.
"*" = ["meson*", "*.yaml", "*.yml", "*.xlsx", "*.txt", "*.so", "*.lib", "*.pyd", "*.pdb", "*.dylib", "*.dll"]

[tool.black]
line-length = 120
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
# https://github.com/PyCQA/isort
multi_line_output = "3"
include_trailing_comma = true
force_grid_wrap = false
use_parentheses = true
line_length = "120"
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
known_first_party = ["wisdem"]
length_sort = "1"
profile = "black"
skip_glob = ['__init__.py']
atomic = true
#lines_after_imports = 2
#lines_between_types = 1
#src_paths=isort,test

[tool.coverage.run]
source = ["weis"]
omit = ["weis/test/*"]

#[tool.cibuildwheel]
#skip = ["cp36-*", "cp37-*", "cp38-*", "*win32*", "*arm64*", "pp*", "*i686*"]
#build-frontend = "build"
